# Generated by Django 4.2.7 on 2023-12-14 01:57

import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='baiduTokenRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.CharField(help_text='refresh')),
                ('access_token', models.CharField(help_text='access')),
                ('session_key', models.CharField(help_text='session_key')),
                ('session_secret', models.CharField(help_text='session_secret')),
                ('expires_in', models.IntegerField(default=0, help_text='expires')),
                ('scope_area', models.CharField(help_text='scope')),
                ('update_dt', models.DateTimeField(default=django.utils.timezone.now, help_text='创建时间')),
                ('access_status', models.IntegerField(default=0, help_text='access_status')),
            ],
            options={
                'db_table': 'baidu_token_record',
            },
        ),
        migrations.CreateModel(
            name='guaInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gua_symbol', models.CharField(help_text='卦象', max_length=12)),
                ('gua_name', models.CharField(help_text='卦名', max_length=12)),
                ('gua_desc', models.CharField(help_text='批语', max_length=128)),
                ('gua_sentence', models.CharField(help_text='卦辞', max_length=256)),
            ],
            options={
                'db_table': 'gua_info',
            },
        ),
        migrations.CreateModel(
            name='guaRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(help_text='用户openid', max_length=64)),
                ('yaos', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('user_gua', models.CharField(help_text='卦象', max_length=8)),
                ('user_ques', models.CharField(help_text='问题')),
                ('ai_answer', models.CharField(help_text='解语')),
                ('rec_dt', models.DateTimeField(help_text='创建时间')),
            ],
            options={
                'db_table': 'gua_record',
            },
        ),
        migrations.CreateModel(
            name='userInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(help_text='唯一用户编号', max_length=32, unique=True)),
                ('user_name', models.CharField(default='用户1702519022', help_text='用户昵称', max_length=32)),
                ('user_email', models.EmailField(help_text='用户邮箱', max_length=254)),
                ('user_phone', models.CharField(default='0', help_text='手机号码', max_length=16)),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='userMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(help_text='唯一用户编号', max_length=32, unique=True)),
                ('user_state', models.IntegerField(default=1, help_text='用户状态')),
                ('user_create', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('user_character', models.IntegerField(default=1, help_text='用户角色')),
            ],
            options={
                'db_table': 'user_main',
            },
        ),
        migrations.CreateModel(
            name='userWechat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(help_text='唯一用户编号', max_length=32, unique=True)),
                ('openid', models.CharField(help_text='用户openid', max_length=64)),
                ('unionid', models.CharField(help_text='用户unionid', max_length=64)),
            ],
            options={
                'db_table': 'user_wechat',
            },
        ),
        migrations.CreateModel(
            name='wechatTokenRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(help_text='access')),
                ('expires_in', models.IntegerField(default=0, help_text='expires_in')),
                ('update_dt', models.DateTimeField(default=django.utils.timezone.now, help_text='创建时间')),
                ('access_status', models.IntegerField(default=0, help_text='access_status')),
            ],
            options={
                'db_table': 'wechat_token_record',
            },
        ),
    ]
